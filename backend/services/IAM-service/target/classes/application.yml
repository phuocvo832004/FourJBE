server:
  port: 8082
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false
  servlet:
    context-path: /api/iam

spring:
  config:
    import: "optional:consul:"
  application:
    name: iam-service
  datasource:
    url: jdbc:postgresql://ep-plain-math-a1asny6x-pooler.ap-southeast-1.aws.neon.tech:5432/gateway
    username: gateway_owner
    password: npg_rku9hBsV0RpY
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 600000
      connection-timeout: 20000
      connection-test-query: SELECT 1
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  cloud:
    consul:
      host: ${CONSUL_HOST:consul}
      port: 8500
      discovery:
        instanceId: ${spring.application.name}
        healthCheckPath: ${server.servlet.context-path}/actuator/health
        healthCheckInterval: 15s
        register: true
        deregister: true
        service-name: ${spring.application.name}
        prefer-ip-address: true
        register-health-check: true
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://${auth0.domain}/.well-known/jwks.json
          audiences: ${auth0.audience}
          issuer-uri: https://${auth0.domain}/

auth0:
  domain: ${AUTH0_DOMAIN:dev-kjdfjkhsdjk.us.auth0.com}
  clientId: ${AUTH0_CLIENT_ID:Jeja5neKhzTZiMSLNyDd1wGCKSvWIeGa}
  clientSecret: ${AUTH0_CLIENT_SECRET:99yrEii__hGYrRdySW3_ltILhrP3DESQJ8aUHHC2x2JZK6rQXqRTINNDD-B595ZR}
  audience: ${AUTH0_AUDIENCE:http://localhost:80}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
      access: read_only
  prometheus:
    metrics:
      export:
        enabled: true
